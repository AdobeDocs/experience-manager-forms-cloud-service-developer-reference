---
openapi: 3.0.0
info:
  description: |
    AEM Forms, Sync Document geneneration APIs.

    # Introduction
    Document generation APIs is part of AEM Document Services. Output service supports various output formats and output design features of AEM Forms Designer.
    Output service can convert XFA templates and XML data to generate print documents in various formats.

    Document generation enables you to create applications that let you:

    - Generate final form documents by populating template files with XML data.
    - Generate output forms in various formats, including non-interactive PDF, PostScript, PCL, and ZPL print streams.
    - Generate print PDFs from XFA form PDFs.
    - Generate PDF, PostScript, PCL and ZPL documents in bulk by merging multiple sets of data with supplied templates.

    You can find out more about document generation at
    [Doc Gen.](https://experienceleague.adobe.com/docs/experience-manager-65/forms/use-document-services/output-service.html)

    # Authentication

    Document generation offers two forms of authentication:
      - Token based
      - Basic authentication

    <SecurityDefinitions />

  title: Sync Document Generation
  contact:
    email: jalagari@adobe.com
  version: 0.0.1
servers:
- url: https://author-p13604-e38039-cmstg.adobeaemcloud.com/adobe/forms/doc
  description: Author Instance
- url: https://publish-p13604-e38039-cmstg.adobeaemcloud.com/adobe/forms/doc
  description: Publish instance
security:
- BearerAuth: []
- BasicAuth: []
tags:
- name: Output Services
  description: Output Services Capabilities
- name: PrintedOutput
  x-displayName: PrintedOutput
  description: |
    <SchemaDefinition schemaRef="#/components/schemas/PrintedOutput" />
- name: PDFOutput
  x-displayName: PDFOutput
  description: |
    <SchemaDefinition schemaRef="#/components/schemas/PDFOutput" />
- name: PrintedOutputOptions
  x-displayName: PrintedOutputOptions
  description: |
    <SchemaDefinition schemaRef="#/components/schemas/PrintedOutputOptions" />
- name: PDFOutputOptions
  x-displayName: PDFOutputOptions
  description: |
    <SchemaDefinition schemaRef="#/components/schemas/PDFOutputOptions" />
- name: PrintConfig
  x-displayName: PrintConfig
  description: |
    <SchemaDefinition schemaRef="#/components/schemas/PrintConfig" />
x-tagGroups:
  - name: Services
    tags:
      - Output Services
      - store
  - name: Models
    tags:
      - PDFOutput
      - PDFOutputOptions
      - PrintedOutput
      - PrintedOutputOptions
      - PrintConfig
externalDocs:
  description: Find out more
  url: https://experienceleague.adobe.com/docs/experience-manager-65/forms/use-document-services/output-service.html
paths:
  /generatePDFOutput:
    post:
      tags:
      - Output Services
      summary: Generates a PDF Document given a template and data to merge.
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PDFOutput'
            encoding:
              template:
                contentType: application/xml, text/plain
                style: form
              data:
                contentType: application/xml, text/plain
                style: form
              xci:
                contentType: application/xml
                style: form
              options:
                contentType: application/json
                style: form
      responses:
        "200":
          description: Resulted PDF Document to provided in response.
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Result'
        "201":
          description: Resulted PDF Document pushed to provided output URL.
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Result'
        "400":
          description: Bad Request. The request was invalid or cannot be otherwise served.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized. Authentication credentials were missing or incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "408":
          description: Request Timed Out. Some operation has timed out due to client issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error. The server has encountered an error and is unable to process your request at this time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /generatePrintedOutput:
    post:
      tags:
      - Output Services
      summary: Create a PS/PCL/ZPL document from input xdp or pdf document.
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PrintedOutput'
            encoding:
              template:
                contentType: application/xml, text/plain
                style: form
              data:
                contentType: application/xml, text/plain
                style: form
              xci:
                contentType: application/json
                style: form
              options:
                contentType: application/json
                style: form
      responses:
        "200":
          description: Resulted PDF Document to provided in response.
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Result'
        "201":
          description: Resulted PDF Document pushed to provided output URL.
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Result'
        "400":
          description: Bad Request. The request was invalid or cannot be otherwise served.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized. Authentication credentials were missing or incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "408":
          description: Request Timed Out. Some operation has timed out due to client issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error. The server has encountered an error and is unable to process your request at this time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      type: object
      properties:
        status:
          type: string
        code:
          type: string
        message:
          type: string
    Result:
      type: string
      format: binary
    Generate:
      required:
      - data
      - template
      type: object
      properties:
        template:
          description: |
            Template on which generated pdf document is based. It can be and XDP document or a PDF document or Acroform.
            Fully qualified location of template or refernces to cq path or binary file.
          oneOf:
          - type: string
            format: binary
          - type: string
        data:
          description: Data xml to be merged with the template. Fully qualified Http location of data or binary file.
          oneOf:
          - type: string
            format: binary
          - type: string
        xci:
          description: This parameter has effect only when template is a XDP document or XDP based PDF. Fully qualified Http location of xci or refernces to AEM path or binary file.
          oneOf:
          - type: string
            format: binary
          - type: string
    PrintConfig:
      type: object
      description: print configuration.
      properties:
        xdcUri:
          type: string
          enum:
          - hppcl5e.xdc
          - hppcl5c.xdc
          - ps_plain.xdc
          - ps_plain_level3.xdc
          - zpl300.xdc
          - zpl600.xdc
          - ipl300.xdc
          - ipl400.xdc
          - tpcl600.xdc
          - dpl300.xdc
          - dpl406.xdc
          - dpl600.xdc
        renderType:
          type: string
          enum:
          - PostScript
          - PCL
          - ZPL
          - DPL
          - IPL
          - TPCL
    PrintedOutputOptions:
      type: object
      description: options to configure the operation
      properties:
        locale:
          type: string
          description: locale in which pdf should be rendered
          default: "en"
        copies:
          type: integer
          description: Sets the number of copies to print. The default value is 1.
          default: 1
        paginationOverride:
          type: string
          description: Option to configure if printing should be one sided or two sided
          enum:
          - simplex
          - duplexShortEdge
          - duplexLongEdge
        printConfig:
          $ref: '#/components/schemas/PrintConfig'
      required:
        - printConfig
      example:
        $ref: '#/components/examples/printoptions/value'
    PDFOutputOptions:
      type: object
      description: options to configure the operation
      properties:
        locale:
          type: string
          description: locale in which pdf should be rendered
          default: "en"
        isTagged:
          type: boolean
          description: Specify true to make pdf accessible
          default: false
        embedFonts:
          type: boolean
          description: Embed the font in output document
          default: false
        linearizedPDF:
          type: boolean
          default: false
          description: Option to optimize pdf for web viewing
        retainFormState:
          type: boolean
          default: false
          description: Set true to retain PDF Form state while flattening PDF Form This parameter has effect only when input is a XFA PDF Form and no input data is provided
        retainUnsignedSignatureFields:
          type: boolean
          default: false
          description: Set true to retain interactive unsigned signature fields in generated Flat PDF so that the Flat PDF can be signed
        acrobatVersion:
          type: string
          description: Minimum required version of the acrobat for the generated document
          enum:
          - "Acrobat_10"
          - "Acrobat_10_1"
          - "Acrobat_11"
      example:
        $ref: '#/components/examples/options/value'
    PrintedOutput:
      allOf:
      - $ref: '#/components/schemas/Generate'
      - required:
        - options
        type: object
        properties:
          options:
            $ref: '#/components/schemas/PrintedOutputOptions'
            description: options to configure the operation
    PDFOutput:
      allOf:
      - $ref: '#/components/schemas/Generate'
      - required:
        - options
        type: object
        properties:
          options:
            $ref: '#/components/schemas/PDFOutputOptions'
  responses:
    LinkResponse:
      description: Resulted PDF Document pushed to provided output URL.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
    InlineResponse:
      description: Resulted PDF Document to provided in response.
      content:
        application/pdf:
          schema:
            type: string
            format: binary
    BadRequest:
      description: Bad Request. The request was invalid or cannot be otherwise served.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServer:
      description: Internal Server Error. The server has encountered an error and is unable to process your request at this time.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    RequestTimeout:
      description: Request Timed Out. Some operation has timed out due to client issue.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized. Authentication credentials were missing or incorrect.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  examples:
    pdfoutput:
      summary: Example of generate pdf output.
      value:
        template: "string"
        data: "string"
        xci: "string"
        options:
          locale: "en"
          isTagged: false
          embedFonts: false
          linearizedPDF: false
          retainFormState: false
          retainUnsignedSignatureFields: false
          acrobatVersion: "Acrobat_11"
    output:
      summary: Example of file type document.
      value:
        ref: The <output_file_content_part> containing the input file in the multipart/form-data request.
        type: binary
    http:
      summary: Example of URL based document.
      value:
        ref: The http url which return the value
        type: http
    printoptions:
      value:
        locale: "en"
        copies: 1
        paginationOverride: simplex
        printConfig:
          renderType: PCL
          xdcUri: tpcl600.xdc
    options:
      value:
        locale: "en"
        isTagged: false
        embedFonts: false
        linearizedPDF: false
        retainFormState: false
        retainUnsignedSignatureFields: false
        acrobatVersion: "Acrobat_11"
  securitySchemes:
    BearerAuth:
      type: https
      scheme: bearer
      bearerFormat: JWT
      description: |
        Access token can then be used as a Bearer authentication token to make requests to AEM as a Cloud Service.

        The server-to-server flow involves the following steps:

        - Fetch the AEM as a Cloud Service credentials from the Developer Console
        - Install the AEM as a Cloud Service credentials on a non AEM server making calls to AEM
        - Generate a JWT token and exchange that token for an access token using Adobe’s IMS APIs
        - Calling the AEM API with the access token as a Bearer Authentication token
        - Set appropriate permissions for the technical account user in the AEM environment.

        More details available at [Authentication Overview](https://experienceleague.adobe.com/docs/experience-manager-learn/getting-started-with-aem-headless/authentication/overview.html?lang=en) and [Example](https://experienceleague.adobe.com/docs/experience-manager-learn/getting-started-with-aem-headless/authentication/overview.html?lang=en)
    BasicAuth:
      type: https
      scheme: basic
      description: |
        Basic authentication is a simple authentication scheme built into the HTTP protocol. The client sends HTTP requests with the **Authorization** header that contains the word **Basic** word followed by a space and a base64-encoded string **username:password**.
        For example, to authorize as **admin / admin** the client would send